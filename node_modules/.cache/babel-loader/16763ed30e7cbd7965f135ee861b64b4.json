{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AroenvR\\\\Desktop\\\\internship-backend\\\\Internship\\\\src\\\\components\\\\InternshipReports.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react'; // import { reports } from '../report_data/reports';\n\nimport Report from './reports/Report';\nimport ReportTable from './reports/ReportTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InternshipReports = props => {\n  _s();\n\n  const [data, setData] = useState(undefined); // Hook to set and contain our data.\n\n  const currentPage = parseInt(localStorage.getItem('current-page')); // Getting the current page from localStorage.\n  // Executed first every time this page renders and when currentPage changes.\n\n  useEffect(() => {\n    if (props != undefined) {\n      setData(props.data[currentPage - 1]);\n    }\n  }, [props, currentPage]);\n  console.log(data); // Quick data check, otherwise child components may render too early.\n\n  if (data === undefined) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading data.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 37\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"internship-reports\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InternshipReports, \"dls/q1mq0V739rI5WVST1+vSgLo=\");\n\n_c = InternshipReports;\nexport default InternshipReports;\n\nvar _c;\n\n$RefreshReg$(_c, \"InternshipReports\");","map":{"version":3,"sources":["C:/Users/AroenvR/Desktop/internship-backend/Internship/src/components/InternshipReports.jsx"],"names":["useEffect","useState","Report","ReportTable","InternshipReports","props","data","setData","undefined","currentPage","parseInt","localStorage","getItem","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACO,SAAD,CAAhC,CADiC,CACY;;AAC7C,QAAMC,WAAW,GAAGC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAA5B,CAFiC,CAEmC;AACpE;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGK,KAAK,IAAIG,SAAZ,EAAuB;AACnBD,MAAAA,OAAO,CAACF,KAAK,CAACC,IAAN,CAAWG,WAAW,GAAG,CAAzB,CAAD,CAAP;AACH;AAEJ,GANQ,EAMN,CAACJ,KAAD,EAAQI,WAAR,CANM,CAAT;AAOAI,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAXiC,CAajC;;AACA,MAAIA,IAAI,KAAKE,SAAb,EAAwB,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAExB,sBACI;AAAK,IAAA,EAAE,EAAC,oBAAR;AAAA,2BAEI;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA5BD;;GAAMJ,iB;;KAAAA,iB;AA8BN,eAAeA,iBAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\n// import { reports } from '../report_data/reports';\r\n\r\nimport Report from './reports/Report';\r\nimport ReportTable from './reports/ReportTable';\r\n\r\nconst InternshipReports = (props) => {\r\n    const [data, setData] = useState(undefined); // Hook to set and contain our data.\r\n    const currentPage = parseInt(localStorage.getItem('current-page')); // Getting the current page from localStorage.\r\n    // Executed first every time this page renders and when currentPage changes.\r\n    useEffect(() => {\r\n        \r\n        if(props != undefined) {\r\n            setData(props.data[currentPage - 1]);\r\n        }\r\n        \r\n    }, [props, currentPage]);\r\n    console.log(data);\r\n\r\n    // Quick data check, otherwise child components may render too early.\r\n    if (data === undefined) return (<p>Loading data.</p>);\r\n\r\n    return (\r\n        <div id='internship-reports'>\r\n\r\n            <section>\r\n                {/* <p id='head'>Korte samenvatting van de week:</p>\r\n\r\n                <Report data={data}/>\r\n                <ReportTable data={data}/> */}\r\n            </section>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InternshipReports;"]},"metadata":{},"sourceType":"module"}