{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AroenvR\\\\Desktop\\\\internship-backend\\\\Internship\\\\src\\\\components\\\\reports\\\\ReportTable.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReportTable = props => {\n  // About dangerouslySetInnerHTML={{ __html: data }}\n  // \\n gets ignored in an JS string so we have to use a \n  //  'dangerously set' <br/> element to acheive a new line.\n  // https://stackoverflow.com/questions/36104302/how-do-i-convert-a-string-to-jsx\n  // Renders a given array to a dangerouslySet li element.\n  const renderMap = array => {\n    return array.map((data, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        dangerouslySetInnerHTML: {\n          __html: data\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    });\n  }; // Renders a given string to the left of the table with the data on the right.\n  // Data is first checked before rendering so the table row will not exist if the data is unidentified / null.\n\n\n  const renderTableRow = (tableTitle, tableData) => {\n    if (tableData === \"\") return;\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: tableTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: renderMap(tableData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"report-table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [renderTableRow('Wat ging er goed:', props.data.good), renderTableRow(\"Wat heb ik bijgeleerd\", props.data.learned), renderTableRow(\"Streefdoelen voor volgende week:\", props.data.targets), renderTableRow(\"Algemene doelen:\", props.data.goals), renderTableRow(\"Problemen & Uitdagingen:\", props.data.problems), renderTableRow(\"Ik kijk uit naar:\", props.data.lookingForward), renderTableRow(\"Extra informatie:\", props.data.extra)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ReportTable;\nexport default ReportTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportTable\");","map":{"version":3,"sources":["C:/Users/AroenvR/Desktop/internship-backend/Internship/src/components/reports/ReportTable.jsx"],"names":["ReportTable","props","renderMap","array","map","data","index","__html","renderTableRow","tableTitle","tableData","good","learned","targets","goals","problems","lookingForward","extra"],"mappings":";;;AAAA,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAE3B;AACA;AACA;AACA;AAEA;AACA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,WAAOA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC9B,0BACI;AAEI,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAEF;AAAV;AAF7B,SACSC,KADT;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARM,CAAP;AASH,GAVD,CAR2B,CAoB3B;AACA;;;AACA,QAAME,cAAc,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA2B;AAC9C,QAAIA,SAAS,KAAK,EAAlB,EAAsB;AAEtB,wBACI;AAAA,8BACI;AAAA,kBACMD;AADN;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,+BACI;AAAA,oBAEQP,SAAS,CAACQ,SAAD;AAFjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAlBD;;AAoBA,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,2BACI;AAAA,6BACI;AAAA,mBAEQF,cAAc,CAAC,mBAAD,EAAsBP,KAAK,CAACI,IAAN,CAAWM,IAAjC,CAFtB,EAMQH,cAAc,CAAC,uBAAD,EAA0BP,KAAK,CAACI,IAAN,CAAWO,OAArC,CANtB,EAUQJ,cAAc,CAAC,kCAAD,EAAqCP,KAAK,CAACI,IAAN,CAAWQ,OAAhD,CAVtB,EAcQL,cAAc,CAAC,kBAAD,EAAqBP,KAAK,CAACI,IAAN,CAAWS,KAAhC,CAdtB,EAkBQN,cAAc,CAAC,0BAAD,EAA6BP,KAAK,CAACI,IAAN,CAAWU,QAAxC,CAlBtB,EAsBQP,cAAc,CAAC,mBAAD,EAAsBP,KAAK,CAACI,IAAN,CAAWW,cAAjC,CAtBtB,EA0BQR,cAAc,CAAC,mBAAD,EAAsBP,KAAK,CAACI,IAAN,CAAWY,KAAjC,CA1BtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CA7ED;;KAAMjB,W;AA+EN,eAAeA,WAAf","sourcesContent":["const ReportTable = (props) => {\r\n\r\n    // About dangerouslySetInnerHTML={{ __html: data }}\r\n    // \\n gets ignored in an JS string so we have to use a \r\n    //  'dangerously set' <br/> element to acheive a new line.\r\n    // https://stackoverflow.com/questions/36104302/how-do-i-convert-a-string-to-jsx\r\n\r\n    // Renders a given array to a dangerouslySet li element.\r\n    const renderMap = (array) => {\r\n        return array.map((data, index) => {\r\n            return (\r\n                <li \r\n                    key={index}\r\n                    dangerouslySetInnerHTML={{ __html: data }}    \r\n                >\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    // Renders a given string to the left of the table with the data on the right.\r\n    // Data is first checked before rendering so the table row will not exist if the data is unidentified / null.\r\n    const renderTableRow = (tableTitle, tableData) => {\r\n        if (tableData === \"\") return;\r\n\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    { tableTitle }\r\n                </td>\r\n\r\n                <td>\r\n                    <ul>\r\n                        { \r\n                            renderMap(tableData)\r\n                        }\r\n                    </ul>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div id='report-table'>\r\n            <table>\r\n                <tbody>\r\n                    { \r\n                        renderTableRow('Wat ging er goed:', props.data.good)\r\n                    }\r\n\r\n                    {\r\n                        renderTableRow(\"Wat heb ik bijgeleerd\", props.data.learned)\r\n                    }\r\n\r\n                    {\r\n                        renderTableRow(\"Streefdoelen voor volgende week:\", props.data.targets)\r\n                    }\r\n                    \r\n                    {\r\n                        renderTableRow(\"Algemene doelen:\", props.data.goals)\r\n                    }\r\n                    \r\n                    {\r\n                        renderTableRow(\"Problemen & Uitdagingen:\", props.data.problems)\r\n                    }\r\n\r\n                    {\r\n                        renderTableRow(\"Ik kijk uit naar:\", props.data.lookingForward)\r\n                    }\r\n                    \r\n                    {\r\n                        renderTableRow(\"Extra informatie:\", props.data.extra)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReportTable;"]},"metadata":{},"sourceType":"module"}