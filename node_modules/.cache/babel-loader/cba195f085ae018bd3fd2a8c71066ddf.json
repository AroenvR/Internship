{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AroenvR\\\\Desktop\\\\internship-backend\\\\Internship\\\\src\\\\components\\\\reports\\\\Report.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Report = props => {\n  // About dangerouslySetInnerHTML={{ __html: data }}\n  // \\n gets ignored in an JS string so we have to use a \n  //  'dangerously set' <br/> element to acheive a new line.\n  // https://stackoverflow.com/questions/36104302/how-do-i-convert-a-string-to-jsx\n  const renderSummary = () => {\n    const summary = props.data.summary;\n    if (summary === undefined) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Something went wrong.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 44\n    }, this);\n    return summary.map((data, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: data\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  const renderFinishedStories = () => {\n    const finished = props.data.jiraStories.finished;\n    if (finished === undefined) return;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const renderStartedStories = () => {\n    const started = props.data.jiraStories.started;\n    if (started === undefined) return;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"started-stories\",\n        children: \"Started Jira stories:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: started.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: data\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"report\",\n    children: [renderSummary(), renderFinishedStories(), renderStartedStories()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Report;\nexport default Report;\n\nvar _c;\n\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"sources":["C:/Users/AroenvR/Desktop/internship-backend/Internship/src/components/reports/Report.jsx"],"names":["Report","props","renderSummary","summary","data","undefined","map","index","__html","renderFinishedStories","finished","jiraStories","renderStartedStories","started"],"mappings":";;;;AAAA,MAAMA,MAAM,GAAIC,KAAD,IAAW;AAEtB;AACA;AACA;AACA;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxB,UAAMC,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWD,OAA3B;AAEA,QAAIA,OAAO,KAAKE,SAAhB,EAA2B,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAE3B,WAAOF,OAAO,CAACG,GAAR,CAAY,CAACF,IAAD,EAAOG,KAAP,KAAiB;AAChC,0BACI;AAEI,QAAA,uBAAuB,EAAE;AAAEC,UAAAA,MAAM,EAAEJ;AAAV;AAF7B,SACSG,KADT;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARM,CAAP;AASH,GAdD;;AAgBA,QAAME,qBAAqB,GAAG,MAAM;AAChC,UAAMC,QAAQ,GAAGT,KAAK,CAACG,IAAN,CAAWO,WAAX,CAAuBD,QAAxC;AAEA,QAAIA,QAAQ,KAAKL,SAAjB,EAA4B;AAE5B,wBACI,qCADJ;AAgBH,GArBD;;AAuBA,QAAMO,oBAAoB,GAAG,MAAM;AAC/B,UAAMC,OAAO,GAAGZ,KAAK,CAACG,IAAN,CAAWO,WAAX,CAAuBE,OAAvC;AAEA,QAAIA,OAAO,KAAKR,SAAhB,EAA2B;AAE3B,wBACI;AAAA,8BACI;AAAG,QAAA,EAAE,EAAC,iBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAEQQ,OAAO,CAACP,GAAR,CAAY,CAACF,IAAD,EAAOG,KAAP,KAAiB;AACzB,8BACI;AAAA,sBACMH;AADN,aAASG,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAND;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADJ;AAgBH,GArBD;;AAuBA,sBACI;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA,eACML,aAAa,EADnB,EAGMO,qBAAqB,EAH3B,EAKMG,oBAAoB,EAL1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA9ED;;KAAMZ,M;AAgFN,eAAeA,MAAf","sourcesContent":["const Report = (props) => {\r\n\r\n    // About dangerouslySetInnerHTML={{ __html: data }}\r\n    // \\n gets ignored in an JS string so we have to use a \r\n    //  'dangerously set' <br/> element to acheive a new line.\r\n    // https://stackoverflow.com/questions/36104302/how-do-i-convert-a-string-to-jsx\r\n    \r\n    const renderSummary = () => {       \r\n        const summary = props.data.summary;\r\n\r\n        if (summary === undefined) return (<p>Something went wrong.</p>);\r\n        \r\n        return summary.map((data, index) => {\r\n            return (\r\n                <p \r\n                    key={index}\r\n                    dangerouslySetInnerHTML={{ __html: data }}\r\n                >\r\n                </p>\r\n            )\r\n        });\r\n    }\r\n\r\n    const renderFinishedStories = () => {\r\n        const finished = props.data.jiraStories.finished;\r\n\r\n        if (finished === undefined) return;\r\n\r\n        return (\r\n            <>\r\n                {/* <p id='finished-stories'>Finished Jira stories:</p>\r\n                <ul>\r\n                    {\r\n                        finished.map((data, index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                    { data }\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul> */}\r\n            </>\r\n        );\r\n    }\r\n\r\n    const renderStartedStories = () => {\r\n        const started = props.data.jiraStories.started;\r\n\r\n        if (started === undefined) return;\r\n\r\n        return (\r\n            <>\r\n                <p id='started-stories'>Started Jira stories:</p>\r\n                <ul>\r\n                    {\r\n                        started.map((data, index) => {\r\n                            return (\r\n                                <li key={index}>\r\n                                    { data }\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div id='report'>\r\n            { renderSummary() }\r\n\r\n            { renderFinishedStories() }\r\n\r\n            { renderStartedStories() }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Report;\r\n\r\n"]},"metadata":{},"sourceType":"module"}